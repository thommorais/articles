/*********************************************************************
*  =Colors
*********************************************************************/

$color-one : #F1F1F1;
$color-two : #FFF;
$color-three : #262626;
$color-four : #000;
$color-five : #D8D8D8;
$color-six : #76BD1D;
$color-seven: #F44E4B;
$color-eight : #3EBB64;

$project-font-size : 16px;

// Returns unitless number
@function remove-unit($number) {
  $unit: unit($number);
  $one: 1;

  @if $unit == "px" { $one: 1px; }
  @if $unit == "em" { $one: 1em; }
  @if $unit == "%"  { $one: 1%;  }

  @return $number / $one;
}

// Returns flexible value using `target ÷ context` formula.
// Returns `em` by default, accepts `%` as format.
@function flex($target, $context, $unit: "em") {
  $size: remove-unit($target) / remove-unit($context);

  @if $unit == "em" { @return #{$size}em; }
  @if $unit == "%" { @return percentage($size); }
}

// Alias to `flex` function, using `%` as format.
@function perc($target, $context: $GRID_WIDTH) {
  @return flex($target, $context, "%");
}

// Alias to `flex` function, using `em` as format.
@function em($target, $context: $project-font-size) {
  @return flex($target, $context, "em");
}

.centered{
  position: absolute;
  top: 50%;
  left: 50%;
  @include transform(translate(-50%, -50%));
}
